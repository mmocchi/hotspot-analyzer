name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: hotspot
            asset_name: hotspot-linux-amd64
          - os: windows-latest
            artifact_name: hotspot.exe
            asset_name: hotspot-windows-amd64.exe
          - os: macos-latest
            artifact_name: hotspot
            asset_name: hotspot-macos-amd64

    steps:
    - uses: actions/checkout@v2
    
    - name: Build
      run: cargo build --release
    
    - name: Create Tarball
      run: |
        tar czf ${{ matrix.asset_name }}.tar.gz -C target/release ${{ matrix.artifact_name }}
        
    - name: Generate SHA256
      run: shasum -a 256 ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.tar.gz.sha256
      
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./${{ matrix.asset_name }}.tar.gz
        asset_name: ${{ matrix.asset_name }}.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload SHA256
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./${{ matrix.asset_name }}.tar.gz.sha256
        asset_name: ${{ matrix.asset_name }}.tar.gz.sha256
        asset_content_type: text/plain