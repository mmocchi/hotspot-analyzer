name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'バージョン番号 (例: v1.2.3)'
        required: true
        type: string
        pattern: '^v\d+\.\d+\.\d+$'

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Validate version format
        run: |
          if [[ ! ${{ github.event.inputs.version }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "エラー: バージョン番号は 'v1.2.3' の形式で入力してください"
            exit 1
          fi

      - name: Check if tag exists
        run: |
          git fetch --tags
          if git rev-parse "${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "エラー: バージョン ${{ github.event.inputs.version }} は既に存在します"
            exit 1
          fi
          
      - name: Create and push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: true
          prerelease: false
          generate_release_notes: true

  build-release:
    needs: tag-and-release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: hotspot-analyzer
            asset_name: hotspot-analyzer-linux-amd64
          - os: windows-latest
            artifact_name: hotspot-analyzer.exe
            asset_name: hotspot-analyzer-windows-amd64.exe  
          - os: macos-latest
            artifact_name: hotspot-analyzer
            asset_name: hotspot-analyzer-macos-amd64

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Build
      run: cargo build --release
    
    - name: Create Archive
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ${{ matrix.asset_name }}.zip "/target/release/${{ matrix.artifact_name }}"
          sha256sum ${{ matrix.asset_name }}.zip > ${{ matrix.asset_name }}.zip.sha256
        else
          mkdir -p dist
          cp "/target/release/${{ matrix.artifact_name }}" "./dist/"
          tar czf ${{ matrix.asset_name }}.tar.gz -C dist .
          rm -rf dist
          sha256sum ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.tar.gz.sha256
        fi
        
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        files: |
          ${{ matrix.asset_name }}.*